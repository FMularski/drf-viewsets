version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
  web:
    build:
      context: .
    command: >
      sh -c "python manage.py collectstatic --no-input &&
             python manage.py migrate &&
             gunicorn library.wsgi:application --bind 0.0.0.0:8000 --reload"
    expose:
      - 8000
    volumes:
      - .:/code
      - static:/code/static
    depends_on:
      db:
        condition: service_healthy
  proxy:
    build:
      context: ./nginx
    ports:
      - 80:80
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static:/home/app/static
    depends_on:
      web:
        condition: service_started

volumes:
  static: